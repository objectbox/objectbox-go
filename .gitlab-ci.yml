stages:
  - gatekeeper
  - test

.test:
  stage: test
  script:
    - ./build/ci.sh

.test:linux:x64:
  extends: .test
  tags: [ x64, linux, docker ]
  image: golang:$GOVERSION

gatekeeper-test:
  extends: .test:linux:x64
  stage: gatekeeper
  variables:
    GOVERSION: '1.17'

test:linux:x64:old:
  extends: .test:linux:x64
  parallel:
    matrix:
      # Removed Go 1.11.4 here, as it results in linker error with ObjectBox 4.1.0 (and probably before):
      # "libobjectbox.so: undefined reference to `logf@GLIBC_2.27'"
      - GOVERSION: [ '1.12' ]
        BUILD_ARGS: -test.short
  before_script:
    - rm go.sum   # issues with checksum mismatch, if anyone still uses old Go, they may need to delete go.sum

test:linux:x64:
  extends: .test:linux:x64
  parallel:
    matrix:
      - GOVERSION: [ '1.13', '1.14', '1.15', '1.16', '1.17', '1.18', '1.19', '1.20', '1.21', '1.22' ]

# TODO Not working on shell runner (e.g. with default (old) version): investigate and find a working setup
test:linux:ARMv7hf:
  extends: .test
  tags: [ armv7hf, linux, shell ]
  variables:
    BUILD_ARGS: -test.short

test:linux:aarch64:
  extends: .test
  tags: [ arm64, linux, docker ]
  image: golang:$GOVERSION
  variables:
    GOVERSION: '1.22'
    BUILD_ARGS: -test.short

test:mac:x64:
  allow_failure: true  # TODO Investigate and fix
  extends: .test

  tags: [ x64, mac, go ]

test:win:x64:
  allow_failure: true  # TODO gcc not found
  extends: .test
  tags: [ x64, windows, go ]
  before_script:
    - rm go.sum   # issues with checksum mismatch, if anyone still uses old Go, they may need to delete go.sum